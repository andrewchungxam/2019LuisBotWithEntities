// <auto-generated />
//
// To parse this JSON data, add NuGet 'Newtonsoft.Json' then do:
//
//    using QuickType;
//
//    var dateAndTimeClass = DateAndTimeClass.FromJson(jsonString);

namespace QuickType
{
    using System;
    using System.Collections.Generic;

    using System.Globalization;
    using Newtonsoft.Json;
    using Newtonsoft.Json.Converters;

    public partial class DateAndTimeClass
    {
        [JsonProperty("datetime")]
 //       public Datetime[] Datetime { get; set; }
        public DateAndTime[] DateAndTime { get; set; }
    }

    public partial class DateAndTime
    {
        [JsonProperty("type")]
        public string Type { get; set; }

        [JsonProperty("timex")]
        public string[] Timex { get; set; }
    }

    public partial class DateAndTimeClass
    {
        public static DateAndTimeClass FromJson(string json) => JsonConvert.DeserializeObject<DateAndTimeClass>(json, QuickType.Converter.Settings);
    }

    //public static class Serialize
    //{
    //    public static string ToJson(this DateAndTimeClass self) => JsonConvert.SerializeObject(self, QuickType.Converter.Settings);
    //}

    //internal static class Converter
    //{
    //    public static readonly JsonSerializerSettings Settings = new JsonSerializerSettings
    //    {
    //        MetadataPropertyHandling = MetadataPropertyHandling.Ignore,
    //        DateParseHandling = DateParseHandling.None,
    //        Converters =
    //        {
    //            new IsoDateTimeConverter { DateTimeStyles = DateTimeStyles.AssumeUniversal }
    //        },
    //    };
    //}
}





// <auto-generated />
//
// To parse this JSON data, add NuGet 'Newtonsoft.Json' then do:
//
//    using QuickType;
//
//    var dateAndTimeClass = DateAndTimeClass.FromJson(jsonString);

//namespace QuickType
//{
//    using System;
//    using System.Collections.Generic;

//    using System.Globalization;
//    using Newtonsoft.Json;
//    using Newtonsoft.Json.Converters;

//    public partial class DateAndTimeClass
//    {
//        [JsonProperty("datetime")]
//        public Datetime[] Datetime { get; set; }
//    }

//    public partial class Datetime
//    {
//        [JsonProperty("type")]
//        public string Type { get; set; }

//        [JsonProperty("timex")]
//        public string[] Timex { get; set; }
//    }

//    public partial class DateAndTimeClass
//    {
//        public static DateAndTimeClass FromJson(string json) => JsonConvert.DeserializeObject<DateAndTimeClass>(json, QuickType.Converter.Settings);
//    }

//    public static class Serialize
//    {
//        public static string ToJson(this DateAndTimeClass self) => JsonConvert.SerializeObject(self, QuickType.Converter.Settings);
//    }

//    internal static class Converter
//    {
//        public static readonly JsonSerializerSettings Settings = new JsonSerializerSettings
//        {
//            MetadataPropertyHandling = MetadataPropertyHandling.Ignore,
//            DateParseHandling = DateParseHandling.None,
//            Converters =
//            {
//                new IsoDateTimeConverter { DateTimeStyles = DateTimeStyles.AssumeUniversal }
//            },
//        };
//    }
//}
